/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package org.GCGA.client.ajax;

import org.GCGA.client.GUI.NewsPanel;
import org.GCGA.client.GUI.WebLoader;
import com.google.gwt.http.client.Request;
import com.google.gwt.http.client.RequestBuilder;
import com.google.gwt.http.client.RequestCallback;
import com.google.gwt.http.client.RequestException;
import com.google.gwt.http.client.Response;
import com.google.gwt.http.client.URL;

import com.google.gwt.json.client.JSONArray;
import com.google.gwt.json.client.JSONException;

import com.google.gwt.json.client.JSONObject;
import com.google.gwt.json.client.JSONParser;

import com.google.gwt.json.client.JSONValue;
import com.smartgwt.client.util.SC;
import com.smartgwt.client.widgets.grid.ListGridRecord;
import org.GCGA.client.News;


/**
 *
 * @author Marcello
 * Singleton class
 */
public class NewsRetriever {

    private static NewsRetriever retriever = null;

    private static String url;

    public static void setUrl(String urlParam){
            url = urlParam;
    }

    private NewsRetriever() {
        setUrl("../loadNews_json.php");
        //setUrl("http://api.search.yahoo.com/ImageSearchService/V1/imageSearch?appid=YahooDemo&output=json");
    }

    public static NewsRetriever get(){
        if (retriever == null ){
            retriever = new NewsRetriever();
        }
        return retriever;

    }

    public void retrieve(final NewsPanel newsPanel){

//alert("retrieving");
        RequestBuilder builder = new RequestBuilder(RequestBuilder.POST, URL.encode(url));
        //alert(URL.encode(url));

        try {
            builder.setRequestData("ActivesOnly=false");
            builder.setHeader("Content-type", "application/x-www-form-urlencoded");

      //Request request =
            String params_str = null;
            WebLoader.showLoader();
            builder.sendRequest(params_str, new RequestCallback() {

            public void onError(Request request, Throwable exception) {
           // Couldn't connect to server (could be timeout, SOP violation, etc.)
                //alert(exception.toString());
                SC.warn("An error has occurred while trying to retrieve the news.<br/>We apologize.<br/>Please feel free to report us the problem.");
                WebLoader.hideLoader();
            }

            public void onResponseReceived(Request request, Response response) {
                //alert(request.toString());
               //alert(response.getStatusCode()+ " *-* " + tmp1);
               JSONObject jsonObj;
               JSONArray jsonArr;
               JSONValue valueObject;

               WebLoader.hideLoader();

              if (200 == response.getStatusCode() ) {
                  // Process the response in response.getText()
                    //alert(response.getText());
                    valueObject = JSONParser.parse(response.getText());
               } /*else if( 0 == response.getStatusCode()){
                   String json_txt  = "[{\"title\":\"Upcoming DB functionalities\",\"body\":\"In a few days website interaction with a database will be up.<br>It will be possible to store the embeddings found as well as to retrieve and check for the best embeddings generated by our algorithm users.<br>So come back and check it out soon!\",\"date\":\"2010-02-15 22:10:18\"},{\"title\":\"Parameters tuning activated\",\"body\":\"Users are now allowed to tune the parameters of the genetic algorithm.<br/>Tuning will be allowed for:<ul><li>Crossover ratio</li><li>Mutations ratio</li><li>Grid size</li></ul>\",\"date\":\"2010-02-25 12:59:39\"},{\"title\":\"Site is online\",\"body\":\"First beta version of the website online.\",\"date\":\"2010-02-10 00:29:15\"}]";
                   try{
                        valueObject = JSONParser.parse(json_txt);
                    }catch(Exception e){
                        alert(e.getMessage());
                        return ;
                    }
               }*/
              else {
                // Handle the error.  Can get the status text from response.getStatusText()
                  try{
                    SC.warn("An error occurred while trying to retrieve the news: " + response.getStatusText());
                  }catch(Exception e){
                            SC.warn("An error occurred while trying to retrieve the news");
                  }finally{
                      throw new IllegalArgumentException("AJAX Request error: ");
                  }
              }
              try {
                  if ( (jsonArr=valueObject.isArray())==null ){
                      SC.warn("An error occurred while trying to retrieve the news");
                          //alert("JSONArray null");
                          return; //Throw exception		    		  }
                  }

                  int s = jsonArr.size();
 //                 alert("Dimensione array " + s);
                  if (s <= 0){
//                          alert("JSONArray empty");
//                                  GWT.log("JSONArray empty", null);
                          return; //Throw exception
                  }

                  ListGridRecord[] tmpList = new ListGridRecord[s];
                  News[] tmpNews = new News[s];

                  String title, body, date;

                  News tmpN;

                  boolean sticky;

                  int errorCounter = 0;

                  for (int i=0, j=0; i < s; i++){
                      try{
                          if ( (jsonObj = jsonArr.get(i).isObject()) == null ){
                              //alert("JSONObject["+i+"] null");
                                  //GWT.log("JSONObject["+i+"] null", null);
                              errorCounter++;
                              continue;
                          }
                          title = jsonObj.get("title").isString().toString().replace("\"", "");
                          body = jsonObj.get("body").isString().toString().replace("\"", "");
                          date = jsonObj.get("date").isString().toString().replace("\"", "");

                          try{
                              sticky = jsonObj.get("sticky").isBoolean().booleanValue();
                          }catch(Exception e){
                              sticky = false;
                          }

                          try{
                              tmpN = new News(title, body, date);
                          }catch(IllegalArgumentException e){
//                              alert(e.getMessage());
                              errorCounter++;
                              continue;
                          }
                          tmpNews[j] = tmpN;

                           tmpList[j] = new ListGridRecord();
     //                     alert("creating");
                           tmpList[j].setAttribute("row", j );
                           tmpList[j].setAttribute("title", title );
    //                       alert("setting 1 ");
                           tmpList[j].setAttribute("body", body );
     //                      alert("setting 2 ");
                           tmpList[j].setAttribute("date", date );

                           if (sticky){
                               tmpList[j].setAttribute("sticky", "folder_sticky");
                           }else{
                               //tmpList[j].setAttribute("sticky", "sticky");
                           }
                           j++;
                      }
                      catch(Exception e){
                          //alert("Data read error");
                          errorCounter++;
                          continue;
                      }
                  }
                  //alert("ready to populate");
                  if (errorCounter!=0){
                      SC.warn("Error while retrieving data: at least one record was not properly retrieved.");
                  }
                  newsPanel.populateList(tmpList, tmpNews);

              }
              catch (JSONException e) {
                SC.warn("An error has occurred while trying to connect to the server.<br/>We apologize.<br/>Please feel free to report us the problem.");
              }
            }
          });
        } catch (RequestException e) {
          // Couldn't connect to server
            SC.warn("An error has occurred while trying to connect to the server.<br/>We apologize.<br/>Please feel free to report us the problem.");
        }
    }

/*
    private native void alert(String message)/*-{
		alert(message);
    }-* /;
 *
 */

}

